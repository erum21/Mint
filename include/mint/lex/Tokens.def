/* ================================================================ *
   MINT
 * ================================================================ */
 
// Definition of all tokens. We define them this way so that we
// can stringify them for debugging purposes.

// EOF marker
DEFINE_TOKEN(END)

// Error marker
DEFINE_TOKEN(ERROR)

// Fundamentals
DEFINE_TOKEN(IDENT)
DEFINE_TOKEN(INTEGER)
DEFINE_TOKEN(FLOAT)
DEFINE_TOKEN(SQ_STRING)
DEFINE_TOKEN(DQ_STRING)
//DEFINE_TOKEN(INTERPOLATED_STRING)

// Grouping tokens
DEFINE_TOKEN(LBRACE)
DEFINE_TOKEN(RBRACE)
DEFINE_TOKEN(LPAREN)
DEFINE_TOKEN(RPAREN)
DEFINE_TOKEN(LBRACKET)
DEFINE_TOKEN(RBRACKET)

// Delimiters
DEFINE_TOKEN(SEMI)
DEFINE_TOKEN(COLON)
DEFINE_TOKEN(COMMA)
//DEFINE_TOKEN(ATSIGN)

// Operator tokens
DEFINE_TOKEN(DEFINE)
DEFINE_TOKEN(ASSIGN)

//DEFINE_TOKEN(ReturnType)
DEFINE_TOKEN(PLUS)
DEFINE_TOKEN(MINUS)
DEFINE_TOKEN(STAR)
DEFINE_TOKEN(SLASH)
//DEFINE_TOKEN(Ampersand)
DEFINE_TOKEN(PERCENT)
//DEFINE_TOKEN(Bar)
//DEFINE_TOKEN(Caret)
//DEFINE_TOKEN(Tilde)
DEFINE_TOKEN(EXCLAM)
//DEFINE_TOKEN(QMark)
//DEFINE_TOKEN(Increment)
//DEFINE_TOKEN(Decrement)
DEFINE_TOKEN(DOUBLE_PLUS)
//DEFINE_TOKEN(DoubleBar)
//DEFINE_TOKEN(DoubleColon)
//DEFINE_TOKEN(DollarSign)
DEFINE_TOKEN(MAPS_TO)

DEFINE_TOKEN(AND)
DEFINE_TOKEN(OR)

// Relational operators
DEFINE_TOKEN(LESS)
DEFINE_TOKEN(GREATER)
DEFINE_TOKEN(LESS_EQUAL)
DEFINE_TOKEN(GREATER_EQUAL)
DEFINE_TOKEN(EQUAL)
DEFINE_TOKEN(NOTEQUAL)

//DEFINE_TOKEN(LShift)
//DEFINE_TOKEN(RShift)

// Joiners
DEFINE_TOKEN(DOT)
DEFINE_TOKEN(CONCAT)

// Keywords
DEFINE_TOKEN(PARAM)
DEFINE_TOKEN(LAZY)

// Built-in type names
DEFINE_TOKEN(TYPENAME_VOID)
DEFINE_TOKEN(TYPENAME_ANY)
DEFINE_TOKEN(TYPENAME_BOOL)
DEFINE_TOKEN(TYPENAME_INT)
DEFINE_TOKEN(TYPENAME_FLOAT)
DEFINE_TOKEN(TYPENAME_STRING)
DEFINE_TOKEN(TYPENAME_LIST)
DEFINE_TOKEN(TYPENAME_DICT)

// Operator keywords
//DEFINE_TOKEN(LogicalAnd)
//DEFINE_TOKEN(LogicalOr)
//DEFINE_TOKEN(LogicalNot)
//DEFINE_TOKEN(Is)
//DEFINE_TOKEN(In)
//DEFINE_TOKEN(Isa)

// Language constants
DEFINE_TOKEN(TRUE)
DEFINE_TOKEN(FALSE)
DEFINE_TOKEN(UNDEFINED)

// Metatypes
DEFINE_TOKEN(OPTION)
DEFINE_TOKEN(PROJECT)
//DEFINE_TOKEN(Let)
//DEFINE_TOKEN(Var)
//DEFINE_TOKEN(Def)
//DEFINE_TOKEN(Get)
//DEFINE_TOKEN(Set)

//DEFINE_TOKEN(Module)
DEFINE_TOKEN(IMPORT)

// Statement keywords
//DEFINE_TOKEN(If)
//DEFINE_TOKEN(Else)
//DEFINE_TOKEN(For)
//DEFINE_TOKEN(While)
//DEFINE_TOKEN(Do)
//DEFINE_TOKEN(Return)
//DEFINE_TOKEN(Yield)
//DEFINE_TOKEN(Throw)
//DEFINE_TOKEN(Break)
//DEFINE_TOKEN(Continue)
//DEFINE_TOKEN(Where)
//DEFINE_TOKEN(Switch)
//DEFINE_TOKEN(Case)
//DEFINE_TOKEN(Match)
//DEFINE_TOKEN(As)

// Exception handling
//DEFINE_TOKEN(Try)
//DEFINE_TOKEN(Catch)
//DEFINE_TOKEN(Finally)

// Special symbols
DEFINE_TOKEN(SUPER)
